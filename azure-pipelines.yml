# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'com/pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
    
- task: CopyFiles@2
  inputs:
    Contents: '**/*.html'
    TargetFolder: $(Build.ArtifactStagingDirectory)
- task: PublishBuildArtifacts@1
  inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)
        artifactName: MyBuildOutputsr'
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $Username = "mallikarjunmopagar@gmail.com";
      $Password = "India@2020";
      $path = "$(Build.ArtifactStagingDirectory)";
      
      function Send-ToEmail([string]$email, [string]$attachmentpath) {
      
          $message = new-object Net.Mail.MailMessage;
          $message.From = "mallikarjunmopagar@gmail.com";
          $message.To.Add($email);
          $message.Subject = "DPNG Automation report";
          $message.Body = "<html>
                          <header> DPNG Autonmation report </header>
                          <body>$TestStatus
                                </body>
                                </html>  ";
          $attachment = New-Object Net.Mail.Attachment($attachmentpath);
          $message.Attachments.Add($attachment);
      
          $smtp = new-object Net.Mail.SmtpClient("smtp.gmail.com", "587");
          $smtp.EnableSSL = "true";
          $smtp.Credentials = New-Object System.Net.NetworkCredential($Username, $Password);
          $smtp.send($message);
          write-host "Mail Sent" ; 
          $attachment.Dispose();
      }
      Send-ToEmail  -UseSsl -email "mallu.mopagar@gmail.com" -attachmentpath $path;